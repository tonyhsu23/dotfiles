" ================== Vim General Settings ==================
let mapleader = "\<Space>"

" Settings for vim-tmux-runner
let g:VtrUseVtrMaps = 1
nnoremap <leader>cd :VtrSendCtrlD<cr>
nnoremap <leader>onr :VtrOpenRunner {'orientation': 'v', 'percentage': 30, 'cmd': ''}<cr>
nnoremap <leader>pry :VtrOpenRunner {'orientation': 'h', 'percentage': 50, 'cmd': 'pry'}<cr>
nnoremap <leader>irb :VtrOpenRunner {'orientation': 'h', 'percentage': 50, 'cmd': 'irb'}<cr>

" rspec-vim and vim-tmux-runner combination 
let g:rspec_command = "call VtrSendCommand('rspec {spec}')"
map <leader>t :call RunCurrentSpecFile()<cr>
map <leader>s :call RunNearestSpec()<cr>
map <leader>l :call RunLastSpec()<cr>
map <leader>a :call RunAllSpecs()<cr>

" Split edit your vimrc. Type space, v, r in sequence to trigger
nmap <leader>vr :sp $MYVIMRC<cr>

" Source (reload) your vimrc. Type space, s, o in sequence to trigger
nmap <leader>so :source $MYVIMRC<cr>

" Copy the entire buffer into the system register
nmap <leader>co ggyG

" Command aliases for typoed commands (accidentally holding shift too long)
command! W w
command! Q q
command! E e

" Enable matchit.vim
runtime macros/matchit.vim

" Automatically rebalance windows on vim resize
autocmd VimResized * :wincmd =

" Zoom a vim pane, <C-w>= to re-balance
nnoremap <leader>- :wincmd _<cr>:wincmd \|<cr>
nnoremap <leader>= :wincmd =<cr>

" Quick type letter j or k to escape
imap jk <esc>
imap kj <esc>

" Move up and down by visible lines if current line is wrapped 
nmap j gj
nmap k gk

" Move to start or end of line
" (whitespace excluded for beginning of line)
nnoremap <leader>b ^
nnoremap <leader>e $

set relativenumber
set number
set cursorline
set cursorcolumn
set expandtab
set shiftwidth=2
set softtabstop=2
set laststatus=2
set statusline=%f%=%y 
set smartindent
set scrolloff=4  " Keep at least 4 lines below cursor
" ================== Vim General Settings ==================

" ========================= Vundle =========================
set nocompatible " Required by vundle
filetype off     " Required by vundle

" Set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" Let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'tpope/vim-rails'
Plugin 'airblade/vim-gitgutter'
Plugin 'tpope/vim-commentary'
Plugin 'kana/vim-textobj-user'
Plugin 'nelstrom/vim-textobj-rubyblock'
Plugin 'ngmy/vim-rubocop'
Plugin 'tpope/vim-surround'
Plugin 'mattn/emmet-vim'
Plugin 'fatih/vim-go'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'christoomey/vim-tmux-runner'
Plugin 'thoughtbot/vim-rspec'

" vim-snipmate
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'
Plugin 'garbas/vim-snipmate'
Plugin 'honza/vim-snippets'

call vundle#end()         " Required by vundle
filetype plugin indent on " Required by vundle
" ========================= Vundle =========================

" ==================== Theme Setting ======================= 
" Set Solarized light theme
execute pathogen#infect()

syntax enable
" let g:solarized_termcolors=256 " For ubuntu to work
" set t_Co=256                   " For ubuntu to work
" set t_ut=                      " For ubuntu to work
set background=light
colorscheme solarized
" ==================== Theme Setting ======================= 
